{"version":3,"sources":["pages/splash.module.scss","pages/signup.module.scss","pages/login.module.scss","routes/App.module.scss","redux/actions/index.js","components/button.js","pages/splash.js","components/input.js","logic-operations/Api.js","assets/storeKeys.js","components/tag-message.js","pages/signup.js","pages/login.js","components/artist-items.js","assets/icons/icons.svg","components/tab-navigation.js","components/phone-container.js","components/artists.js","components/arrow-back.js","pages/home-search.js","logic-operations/sumTotal.js","logic-operations/artistStats.js","components/results.js","pages/artist-Info.js","logic-operations/date-format.js","logic-operations/toMillisec.js","pages/result-tracks.js","logic-operations/groupBy.js","logic-operations/makeArray.js","routes/LoginRoutes.js","routes/App.js","index.js","redux/reducers/index.js"],"names":["module","exports","setUser","payload","type","setLogin","Button","classType","title","submit","className","toUpperCase","defaultProps","connect","state","login","background","styles","container","to","Input","placeholder","name","value","onchange","onChange","e","target","BASE_URL","getSpotifyToken","a","myHeaders","Headers","basic","btoa","process","append","urlencoded","URLSearchParams","requestOptions","method","headers","body","redirect","fetch","response","json","initSpotifyObject","spotifyApi","SpotifyWebApi","token","setAccessToken","access_token","searchArtist","artistName","searchArtists","getArtist","artistId","getArtists","artistsIdArray","getArtistTopTracks","addNewUser","email","password","JSON","stringify","user","url","data","status","checkValidToken","getToken","raw","getUserArtists","userId","addUserArtist","idString","photoUrl","artist","id_string","addUserArtistStats","spotifyTrackId","trackName","hours","stat","track_name","spotify_track_id","getArtistStats","idArtist","getUserArtistStats","userToken","TagMessage","subtitle","mapDispatchToProps","history","useState","loading","setLoading","initialForm","error","form","setForm","handleSubmit","preventDefault","userResponse","responseToken","store","set","storeKeys","push","go","handleInputChange","checked","onSubmit","LogIn","useHistory","then","get","ArtistItems","tracks","src","alt","TabNavigation","active","href","IconsSvg","PhoneContainer","children","tabActive","playerActive","trackId","iframeUrl","height","frameBorder","allowtransparency","allow","Artists","artists","setArtists","idStrings","setIdStrings","loadingArtists","setLoadingArtists","useEffect","included","map","attributes","length","elem","id","images","ArrowBack","path","HomeSearch","initialStateForm","search","result","setResult","setError","items","onClick","onKeyUp","role","tabIndex","array","reduce","accumulator","currentValue","statsToDeal","artistsIncluded","statsArray","filter","some","sumTotal","toFixed","days","statsToDealTemp","commonDay","arr1","item","mf","m","i","j","created_at","mostCommonDays","createdAt","Date","getDay","created_at_string","Results","setArtistsData","setArtistsIncluded","arrayColors","arrayColorsIndex","width","index","statsData","relationships","stats","ArtistInfo","setArtist","setTracks","player","idTrack","playerOption","setPlayerOption","params","useParams","responseMessage","setResponseMessage","Promise","all","trackNumber","artistTracks","style","backgroundImage","track","duration_ms","album","getFormatDate","dateString","dateResponse","currDate","getDate","currWeekDay","duration","seconds","Math","floor","minutes","getbyDate","statsGroupedArray","checkDate","argMonth","getMonth","checkArgMonth","ResultTrack","dateIndex","date","setDate","setStats","statsGroup","setStatsGroup","setDatesFunction","click","statsGrouped","key","Object","entries","makeArray","toMillisec","LoginRoutes","component","tokenVar","remove","SignUp","Splash","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a472529.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"splash_background__1a0rE\",\"container\":\"splash_container__LjTQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"signup_background__1QYS0\",\"container\":\"signup_container__3C6LB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"login_background__39Ha4\",\"container\":\"login_container__YWJyi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__1gHB6\"};","export const setUser = payload => ({\n  type: 'SET_USER',\n  payload,\n});\n\nexport const setLogin = payload => ({\n  type: 'SET_LOGIN',\n  payload,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.scss';\n\nconst Button = ({ classType, title, submit }) => (\n  <>\n    {submit\n      ? (<button type=\"submit\" className={`button ${classType}`}>{title.toUpperCase()}</button>)\n      : (<button type=\"button\" className={`button ${classType}`}>{title.toUpperCase()}</button>)}\n  </>\n);\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  classType: PropTypes.string.isRequired,\n  submit: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  submit: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport Button from '../components/button';\nimport styles from './splash.module.scss';\n\nconst Splash = ({ login }) => {\n  const { background, container } = styles;\n  if (login) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div className={background}>\n      <div className={container}>\n        <h1 className=\"title\">Spotify Stats</h1>\n        <p>You are what you measure</p>\n        <Link to=\"/signup\">\n          <Button classType=\"primary\" title=\"sign up\" />\n        </Link>\n        <Link to=\"/login\">\n          <Button classType=\"secondary\" title=\"log in\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nSplash.propTypes = {\n  login: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  login: state.login,\n});\n\nexport default connect(mapStateToProps)(Splash);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './input.scss';\n\nconst Input = ({\n  placeholder,\n  name,\n  value,\n  type,\n  onchange,\n}) => (\n  <input\n    className=\"input\"\n    name={name}\n    type={type}\n    placeholder={placeholder}\n    value={value}\n    onChange={e => onchange(e.target)}\n  />\n);\n\nInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  onchange: PropTypes.func,\n};\n\nInput.defaultProps = {\n  onchange: () => { },\n  type: 'text',\n  value: '',\n};\n\nexport default Input;\n","import SpotifyWebApi from 'spotify-web-api-js';\n\nconst BASE_URL = 'https://stats-musique.herokuapp.com/api/v1';\n\nconst getSpotifyToken = async () => {\n  const myHeaders = new Headers();\n  const basic = `Basic ${btoa(`${process.env.REACT_APP_CLIENT_ID}:${process.env.REACT_APP_CLIENT_SECRET}`)}`;\n  myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\n  myHeaders.append('Authorization', basic);\n\n  const urlencoded = new URLSearchParams();\n  urlencoded.append('grant_type', 'client_credentials');\n\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: 'follow',\n  };\n\n  const baseURL = 'https://accounts.spotify.com/api/token';\n  const response = await fetch(baseURL, requestOptions);\n\n  return response.json();\n};\n\nconst initSpotifyObject = async () => {\n  const spotifyApi = new SpotifyWebApi();\n  const token = await getSpotifyToken();\n  await spotifyApi.setAccessToken(token.access_token);\n  return spotifyApi;\n};\n\nconst searchArtist = async artistName => {\n  let response;\n  const spotifyApi = await initSpotifyObject();\n  try {\n    response = await spotifyApi.searchArtists(artistName);\n  } catch (error) {\n    response = error;\n  }\n  return response;\n};\n\nconst getArtist = async artistId => {\n  let response;\n  const spotifyApi = await initSpotifyObject();\n  try {\n    response = await spotifyApi.getArtist(artistId);\n  } catch (error) {\n    response = error;\n  }\n  return response;\n};\n\nconst getArtists = async artistsIdArray => {\n  let response;\n  const spotifyApi = await initSpotifyObject();\n  try {\n    response = await spotifyApi.getArtists(artistsIdArray);\n  } catch (error) {\n    response = error;\n  }\n  return response;\n};\n\nconst getArtistTopTracks = async artistId => {\n  let response;\n  const spotifyApi = await initSpotifyObject();\n  try {\n    response = await spotifyApi.getArtistTopTracks(artistId, 'ES');\n  } catch (error) {\n    response = error;\n  }\n  return response;\n};\n\nconst addNewUser = async ({ name, email, password }) => {\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  const body = JSON.stringify({\n    user: {\n      name, email, password,\n    },\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers,\n    body,\n    redirect: 'follow',\n  };\n\n  const url = `${BASE_URL}/users`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nconst checkValidToken = async token => {\n  const headers = new Headers();\n  headers.append('Authorization', token);\n\n  const requestOptions = {\n    method: 'POST',\n    headers,\n    redirect: 'follow',\n  };\n\n  const url = `${BASE_URL}/valid_token`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nconst getToken = async ({ email, password }) => {\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n\n  const raw = JSON.stringify({ user: { email, password } });\n\n  const requestOptions = {\n    method: 'POST',\n    headers,\n    body: raw,\n    redirect: 'follow',\n  };\n  const url = `${BASE_URL}/tokens`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nconst getUserArtists = async userId => {\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'follow',\n  };\n\n  const url = `${BASE_URL}/user_artists/${userId}`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nconst addUserArtist = async (idString, name, photoUrl, token) => {\n  const headers = new Headers();\n  headers.append('Authorization', token);\n  headers.append('Content-Type', 'application/json');\n\n  const body = JSON.stringify({ artist: { id_string: idString, name, photoUrl } });\n\n  const requestOptions = {\n    method: 'POST',\n    headers,\n    body,\n    redirect: 'follow',\n  };\n  const url = `${BASE_URL}/artists`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nconst addUserArtistStats = async (spotifyTrackId, trackName, hours, idString, token) => {\n  const headers = new Headers();\n  headers.append('Authorization', token);\n  headers.append('Content-Type', 'application/json');\n\n  const body = JSON.stringify({\n    stat: {\n      hours, track_name: trackName, spotify_track_id: spotifyTrackId,\n    },\n    id_string: idString,\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers,\n    body,\n    redirect: 'follow',\n  };\n  const url = `${BASE_URL}/stats`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nconst getArtistStats = async idArtist => {\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'follow',\n  };\n\n  const url = `${BASE_URL}/artists/${idArtist}`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nconst getUserArtistStats = async userToken => {\n  const headers = new Headers();\n  headers.append('Authorization', userToken);\n\n  const requestOptions = {\n    method: 'GET',\n    headers,\n    redirect: 'follow',\n  };\n\n  const url = `${BASE_URL}/user_artist_stats`;\n  const response = await fetch(url, requestOptions);\n  const data = await response?.json();\n  return { data, status: response.status };\n};\n\nexport {\n  addUserArtistStats,\n  addUserArtist,\n  addNewUser,\n  checkValidToken,\n  getArtistStats,\n  getToken,\n  getUserArtists,\n  getUserArtistStats,\n  getArtist,\n  getArtists,\n  getArtistTopTracks,\n  searchArtist,\n};\n","export default { TOKEN_VAR: 'TOKEN_VAR', SET_LOGIN: 'SET_LOGIN' };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './tag-message.scss';\n\nconst TagMessage = ({ title, subtitle }) => (\n  <div className=\"no-content\">\n    <div className=\"no-content-container\">\n      <h3>{title}</h3>\n      {subtitle !== '' && (<p>{subtitle}</p>)}\n    </div>\n  </div>\n);\n\nTagMessage.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n};\n\nTagMessage.defaultProps = {\n  subtitle: '',\n};\n\nexport default TagMessage;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport store from 'store';\nimport Button from '../components/button';\nimport Input from '../components/input';\nimport { addNewUser, getToken } from '../logic-operations/Api';\nimport storeKeys from '../assets/storeKeys';\nimport styles from './signup.module.scss';\nimport TagMessage from '../components/tag-message';\nimport { setLogin, setUser } from '../redux/actions';\n\nconst SignUp = ({\n  history, setLogin, setUser, login,\n}) => {\n  const { background, container } = styles;\n  const [loading, setLoading] = useState(false);\n  const initialForm = {\n    name: '', email: '', password: '', error: false,\n  };\n  const [form, setForm] = useState(initialForm);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const emptyForm = form.name === '' || form.email === '' || form.password === '';\n    if (!emptyForm) {\n      setLoading(true);\n      const userResponse = await addNewUser(form);\n      if (userResponse.status === 201) {\n        const responseToken = await getToken(form);\n        if (responseToken.status !== 401) {\n          store.set(storeKeys.TOKEN_VAR, responseToken.data.token);\n          setLogin(true);\n          setUser(responseToken.data.userId);\n          setForm(initialForm);\n          history.push('/');\n          history.go(0);\n        }\n      } else if (userResponse.status === 422) setForm({ error: true });\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = target => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    setForm({\n      ...form,\n      [name]: value,\n    });\n  };\n\n  if (login) {\n    return <Redirect to=\"/artists\" />;\n  }\n\n  return (\n    <div className={background}>\n      {!loading\n        ? (\n          <div className={container}>\n            <form onSubmit={handleSubmit}>\n              {form.error && (\n                <p>Email already exists</p>\n              )}\n              <Input\n                placeholder=\"Name\"\n                name=\"name\"\n                value={form.name}\n                onchange={handleInputChange}\n              />\n              <Input\n                placeholder=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                value={form.email}\n                onchange={handleInputChange}\n              />\n              <Input\n                placeholder=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                value={form.password}\n                onchange={handleInputChange}\n              />\n              <Button classType=\"primary\" title=\"sign up\" submit />\n            </form>\n            <Link to=\"/login\">\n              <Button classType=\"secondary\" title=\"log in\" />\n            </Link>\n          </div>\n        )\n        : <TagMessage title=\"Loading...\" />}\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.objectOf(PropTypes.objectOf).isRequired,\n  login: PropTypes.bool.isRequired,\n  setLogin: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  login: state.login,\n});\n\nconst mapDispatchToProps = {\n  setLogin,\n  setUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport store from 'store';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from '../components/button';\nimport Input from '../components/input';\nimport styles from './login.module.scss';\nimport storeKeys from '../assets/storeKeys';\nimport { getToken } from '../logic-operations/Api';\nimport TagMessage from '../components/tag-message';\nimport { setLogin, setUser } from '../redux/actions';\n\nconst LogIn = ({\n  setLogin, setUser, login,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const { background, container } = styles;\n  const initialForm = { email: '', password: '', error: false };\n  const [form, setForm] = useState(initialForm);\n\n  const loginEmail = e => {\n    e.preventDefault();\n    const emptyForm = form.email === '' || form.password === '';\n    if (!emptyForm) {\n      setLoading(true);\n      getToken(form).then(responseToken => {\n        if (responseToken.status !== 401) {\n          store.set(storeKeys.TOKEN_VAR, responseToken.data.token);\n          setLogin(true);\n          setUser(responseToken.data.userId);\n          history.push('/');\n          history.go(0);\n        } else {\n          setForm({ error: true });\n          setLoading(false);\n        }\n      });\n    }\n  };\n\n  const handleInputChange = target => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    setForm({\n      ...form,\n      [name]: value,\n    });\n  };\n\n  if (login) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className={background}>\n      {!loading\n        ? (\n          <div className={container}>\n            <form onSubmit={loginEmail}>\n              {form.error && (\n                <p>Invalid email/password. Try again!</p>\n              )}\n              <Input\n                placeholder=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                value={form.email}\n                onchange={handleInputChange}\n              />\n              <Input\n                placeholder=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                value={form.password}\n                onchange={handleInputChange}\n              />\n              <Button classType=\"primary\" title=\"log in\" submit />\n            </form>\n            <Link to=\"/signup\">\n              <Button classType=\"secondary\" title=\"sign up\" />\n            </Link>\n          </div>\n        )\n        : <TagMessage title=\"Loading...\" />}\n    </div>\n  );\n};\n\nLogIn.propTypes = {\n  login: PropTypes.bool,\n  setLogin: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nLogIn.defaultProps = {\n  login: !!store.get(storeKeys.TOKEN_VAR),\n};\n\nconst mapStateToProps = state => ({\n  login: state.login,\n});\n\nconst mapDispatchToProps = {\n  setLogin,\n  setUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './artist-items.scss';\n\nconst ArtistItems = ({ photoUrl, artistName, tracks }) => (\n  <div className=\"container-items\">\n    <div className=\"content-items\">\n      <img src={photoUrl} alt={artistName} />\n      <div className=\"info-items\">\n        <p className=\"title-artist\">{artistName}</p>\n        {tracks !== 0 && (<p className=\"subtitle-artist\">{` ${tracks} songs`}</p>)}\n      </div>\n    </div>\n  </div>\n);\n\nArtistItems.propTypes = {\n  photoUrl: PropTypes.string.isRequired,\n  artistName: PropTypes.string.isRequired,\n  tracks: PropTypes.number,\n};\n\nArtistItems.defaultProps = {\n  tracks: 0,\n};\n\nexport default ArtistItems;\n","export default __webpack_public_path__ + \"static/media/icons.9241ad0c.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport IconsSvg from '../assets/icons/icons.svg';\nimport './tab-navigation.scss';\n\nconst TabNavigation = ({ active }) => (\n  <div className=\"container-tab\">\n    <div className=\"content-tab\">\n      <div className={`icon library ${active === '1' && 'active'}`}>\n        <Link to=\"/\">\n          <svg className=\"library-icon\">\n            <use href={`${IconsSvg}#library`} />\n          </svg>\n          <span>Library</span>\n        </Link>\n      </div>\n\n      <div className={`icon results ${active === '2' && 'active'}`}>\n        <Link to=\"/results\">\n          <svg className=\"results-icon\">\n            <use href={`${IconsSvg}#results`} />\n          </svg>\n          <span>Results</span>\n        </Link>\n      </div>\n\n      <div className={`icon profile ${active === '3' && 'active'}`}>\n        <svg className=\"profile-icon\">\n          <use href={`${IconsSvg}#profile`} />\n        </svg>\n        <span>Profile</span>\n      </div>\n    </div>\n  </div>\n);\n\nTabNavigation.propTypes = {\n  active: PropTypes.string.isRequired,\n};\n\nexport default TabNavigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TabNavigation from './tab-navigation';\nimport './phone-container.scss';\n\nconst PhoneContainer = ({\n  children, tabActive, playerActive, trackId,\n}) => {\n  const iframeUrl = `https://open.spotify.com/embed/track/${trackId}`;\n  return (\n    <div className=\"phone-container\">\n      <div className=\"phone-content\">\n        {children}\n      </div>\n      {playerActive\n        && (\n          <iframe\n            title={trackId}\n            src={iframeUrl}\n            height=\"100\"\n            frameBorder=\"0\"\n            allowtransparency=\"true\"\n            allow=\"encrypted-media\"\n            className=\"iframeStyle\"\n          />\n        )}\n      <TabNavigation\n        active={tabActive}\n      />\n    </div>\n  );\n};\n\nPhoneContainer.propTypes = {\n  tabActive: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  playerActive: PropTypes.bool,\n  trackId: PropTypes.string,\n};\n\nPhoneContainer.defaultProps = {\n  playerActive: false,\n  trackId: '',\n};\n\nexport default PhoneContainer;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getArtists, getUserArtists } from '../logic-operations/Api';\n\nimport ArtistItems from './artist-items';\nimport IconsSvg from '../assets/icons/icons.svg';\nimport PhoneContainer from './phone-container';\nimport TagMessage from './tag-message';\nimport './artists.scss';\n\nconst Artists = ({ user }) => {\n  const [artists, setArtists] = useState([]);\n  const [idStrings, setIdStrings] = useState([]);\n  const [loadingArtists, setLoadingArtists] = useState(true);\n\n  useEffect(() => {\n    if (user !== 0) {\n      getUserArtists(user)\n        .then(response => response.data.included.map(tracks => tracks.attributes.id_string))\n        .then(idStrings => {\n          if (idStrings.length !== 0) {\n            setIdStrings(idStrings);\n            getArtists(idStrings).then(response => {\n              setArtists(response.artists);\n              setLoadingArtists(false);\n            });\n          }\n          setLoadingArtists(false);\n        });\n    }\n  }, [user]);\n\n  return (\n    <PhoneContainer tabActive=\"1\">\n      <div className=\"header\">\n        <Link to=\"/artists/search\">\n          <svg className=\"search-icon\">\n            <use href={`${IconsSvg}#search-symbol`} />\n          </svg>\n        </Link>\n        <h3>MY MUSIC</h3>\n      </div>\n      {idStrings.length !== 0 && !loadingArtists\n        && (\n          <>\n            <div className=\"artists-items\">\n              {artists.map(elem => (\n                <Link\n                  key={elem.id}\n                  to={`/artists/${elem.id}`}\n                >\n                  <ArtistItems\n                    photoUrl={elem.images?.[elem.images.length - 1].url}\n                    artistName={elem.name}\n                  />\n                </Link>\n              ))}\n            </div>\n          </>\n        )}\n      {\n        idStrings.length === 0 && loadingArtists\n        && (\n          <TagMessage title=\"Loading...\" />\n        )\n      }\n      {\n        idStrings.length === 0 && !loadingArtists\n        && (\n          <TagMessage\n            title=\"No data available\"\n            subtitle=\"Search your favorite artist\"\n          />\n        )\n      }\n    </PhoneContainer>\n  );\n};\n\nArtists.propTypes = {\n  user: PropTypes.number,\n};\n\nArtists.defaultProps = {\n  user: 0,\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Artists);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport IconsSvg from '../assets/icons/icons.svg';\nimport './arrow-back.scss';\n\nconst ArrowBack = ({ path }) => (\n  <Link to={path}>\n    <svg className=\"back-arrow-icon\">\n      <use href={`${IconsSvg}#back-arrow`} />\n    </svg>\n  </Link>\n);\n\nArrowBack.propTypes = {\n  path: PropTypes.string.isRequired,\n};\n\nexport default ArrowBack;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport store from 'store';\nimport ArtistItems from '../components/artist-items';\nimport ArrowBack from '../components/arrow-back';\nimport Input from '../components/input';\nimport PhoneContainer from '../components/phone-container';\nimport { addUserArtist, searchArtist } from '../logic-operations/Api';\nimport TagMessage from '../components/tag-message';\nimport './home-search.scss';\nimport storeKeys from '../assets/storeKeys';\n\nconst HomeSearch = () => {\n  const initialStateForm = { search: '', loading: false };\n  const [form, setForm] = useState(initialStateForm);\n  const [result, setResult] = useState([]);\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setResult([]);\n    if (form.search !== '') {\n      setForm({ ...form, loading: true });\n      searchArtist(form.search).then(data => {\n        if (data !== null) setForm(initialStateForm);\n        setResult(data.artists.items[0]);\n      });\n    }\n  };\n\n  const handleInputChange = target => {\n    setError(false);\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const { name } = target;\n    setForm({\n      ...form,\n      [name]: value,\n    });\n  };\n\n  const addToHome = () => {\n    setLoading(true);\n    const { id, name, images } = result;\n    const photoUrl = images[images.length - 1].url;\n    addUserArtist(id, name, photoUrl, store.get(storeKeys.TOKEN_VAR))\n      .then(response => {\n        if (response.status === 201) {\n          setLoading(false);\n          history.push('/');\n        } else {\n          setError(true);\n          setLoading(false);\n        }\n      });\n  };\n\n  return (\n    <PhoneContainer tabActive=\"1\">\n      <div className=\"home-search\">\n        <div className=\"home-search-content\">\n          <div className=\"header\">\n            <ArrowBack path=\"/artists\" />\n            <form onSubmit={handleSubmit}>\n              <Input\n                placeholder=\"Search artist\"\n                name=\"search\"\n                value={form.search}\n                onchange={handleInputChange}\n              />\n            </form>\n          </div>\n\n          <div className=\"body-home-search\">\n            {error\n              && (\n                <p>This artist is already on your library</p>\n              )}\n            {(result.length !== 0 && !form.loading && !loading)\n              && (\n                <div\n                  onClick={addToHome}\n                  onKeyUp={() => { }}\n                  role=\"button\"\n                  tabIndex=\"0\"\n                >\n                  <ArtistItems\n                    key={result.id}\n                    photoUrl={result?.images[result.images.length - 1]?.url}\n                    artistName={result.name}\n                  />\n                </div>\n              )}\n          </div>\n          {(form.loading || loading)\n            && (\n              <TagMessage title=\"Loading...\" />\n            )}\n        </div>\n      </div>\n    </PhoneContainer>\n  );\n};\n\nexport default HomeSearch;\n","export default array => array.reduce((accumulator, currentValue) => {\n  const { attributes: { hours } } = currentValue;\n  return +accumulator + +hours;\n}, 0);\n","import sumTotal from './sumTotal';\n\nconst statsToDeal = (artistsIncluded, statsArray) => artistsIncluded\n  .filter(stat => statsArray.some(elem => elem.id === stat.id));\n\nconst mostCommonDays = arr1 => {\n  let mf = 1;\n  let m = 0;\n  let item;\n  if (arr1.length !== 1) {\n    for (let i = 0; i < arr1.length; i += 1) {\n      for (let j = i; j < arr1.length; j += 1) {\n        const { attributes: { created_at: createAt1 } } = arr1[i];\n        const { attributes: { created_at: createAt2 } } = arr1[j];\n        if (createAt1 === createAt2) m += 1;\n        if (mf < m) {\n          mf = m;\n          item = arr1[i];\n        }\n      }\n      m = 0;\n    }\n  } else {\n    const [first] = arr1;\n    item = first;\n  }\n\n  return item;\n};\n\nexport const hours = (artistsIncluded, statsArray) => {\n  const millisecToHours = 3600000;\n  return `${(sumTotal(statsToDeal(artistsIncluded, statsArray)) / millisecToHours).toFixed(2)}`;\n};\n\nexport const days = (artistsIncluded, statsArray) => {\n  let statsToDealTemp = statsToDeal(artistsIncluded, statsArray);\n  statsToDealTemp = statsToDealTemp\n    .map(elem => {\n      const { attributes } = elem;\n      const { attributes: { created_at: createdAt } } = elem;\n      return {\n        ...elem,\n        attributes: {\n          ...attributes, created_at: new Date(createdAt).getDay(), created_at_string: createdAt,\n        },\n      };\n    });\n  const commonDay = mostCommonDays(statsToDealTemp)?.attributes.created_at;\n  const days = ['su', 'mo', 'tu', 'we', 'th', 'fr', 'sa'];\n  return `${days[commonDay]}`;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport store from 'store';\nimport PhoneContainer from './phone-container';\nimport TagMessage from './tag-message';\nimport { getUserArtistStats } from '../logic-operations/Api';\nimport storeKeys from '../assets/storeKeys';\nimport './results.scss';\nimport { days, hours } from '../logic-operations/artistStats';\n\nconst Results = () => {\n  const [artists, setArtistsData] = useState([]);\n  const [artistsIncluded, setArtistsIncluded] = useState([]);\n  const [loadingArtists, setLoadingArtists] = useState(true);\n\n  useEffect(() => {\n    getUserArtistStats(store.get(storeKeys.TOKEN_VAR))\n      .then(response => {\n        if (response.status === 200) {\n          setLoadingArtists(false);\n          setArtistsData(response.data.data);\n          setArtistsIncluded(response.data.included);\n        }\n      });\n  }, []);\n\n  const arrayColors = ['colorPink', 'colorLettuce', 'colorDark', 'colorGreen'];\n  let arrayColorsIndex = -1;\n  return (\n    <PhoneContainer tabActive=\"2\">\n      {artists.length !== 0 && !loadingArtists\n        && (\n          <div className=\"results-page\">\n            <div className=\"results-content\">\n              <div className=\"header-results-page\">\n                <h3>Popular artists</h3>\n                <div className=\"popular-artists\">\n                  {artists.map(elem => {\n                    const { attributes } = elem;\n                    return (\n                      <div key={elem.id} className=\"popular-artists-element\">\n                        <img src={attributes.photoUrl} width=\"68\" alt={attributes.name} />\n                        <p>{attributes.name}</p>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <div className=\"body-results-page\">\n                {artists.map((elem, index) => {\n                  if (index === arrayColors.length) arrayColorsIndex = -1;\n                  arrayColorsIndex += 1;\n                  const { attributes } = elem;\n                  const { relationships: { stats: { data: statsData } } } = elem;\n                  return (\n                    <Link\n                      key={elem.id}\n                      to={`/results/${elem.id}`}\n                    >\n                      <div id={arrayColors[arrayColorsIndex]} className=\"card-artist-container\">\n                        <div className=\"card-artist-content\">\n                          <img src={attributes.photoUrl} alt={attributes.name} width=\"120\" />\n                          <div className=\"info-artista\">\n                            <h3>{attributes.name}</h3>\n                            <div className=\"stats\">\n                              <div className=\"stream\">\n                                <span>STREAMS</span>\n                                <p>{statsData.length}</p>\n                              </div>\n                              <div className=\"hours\">\n                                <span>HOURS</span>\n                                <p>{hours(artistsIncluded, statsData)}</p>\n                              </div>\n                              <div className=\"days\">\n                                <span>DAYS</span>\n                                <p>{days(artistsIncluded, statsData).toUpperCase()}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        )}\n      {\n        artists.length === 0 && loadingArtists\n        && (\n          <TagMessage title=\"Loading...\" />\n        )\n      }\n      {\n        artists.length === 0 && !loadingArtists\n        && (\n          <TagMessage\n            title=\"No data available\"\n            subtitle=\"Search your favorite artist\"\n          />\n        )\n      }\n    </PhoneContainer>\n  );\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport store from 'store';\nimport { addUserArtistStats, getArtist, getArtistTopTracks } from '../logic-operations/Api';\nimport ArrowBack from '../components/arrow-back';\nimport PhoneContainer from '../components/phone-container';\nimport TagMessage from '../components/tag-message';\nimport storeKeys from '../assets/storeKeys';\nimport './artist-info.scss';\n\nconst ArtistInfo = () => {\n  const [loading, setLoading] = useState(true);\n  const [artist, setArtist] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const playerOptionInitial = { player: false, idTrack: '' };\n  const [playerOption, setPlayerOption] = useState(playerOptionInitial);\n  const params = useParams();\n  const [responseMessage, setResponseMessage] = useState('');\n\n  useEffect(() => {\n    Promise.all([getArtist(params.id), getArtistTopTracks(params.id)]).then(data => {\n      if (data !== null) setLoading(false);\n      setArtist(data[0]);\n      setTracks(data[1].tracks);\n    });\n  }, []);\n\n  const playActivated = track => () => {\n    const { id, name } = track;\n    setPlayerOption({ player: true, idTrack: id });\n    addUserArtistStats(id, name, track.duration_ms, artist.id, store.get(storeKeys.TOKEN_VAR))\n      .then(response => {\n        if (response.status === 201) {\n          setResponseMessage('stats saved');\n        }\n      });\n  };\n\n  let trackNumber = 0;\n  const artistTracks = artist.length !== 0 && tracks.length !== 0;\n  return (\n    <PhoneContainer tabActive=\"1\" playerActive={playerOption.player} trackId={playerOption.idTrack}>\n      {artistTracks && !loading\n        && (\n          <>\n            <div className=\"header-artist-info\">\n              <div className=\"hero-inner\" style={{ backgroundImage: `url(${artist.images?.[0].url})` }} />\n              <p>{artist.name}</p>\n              <ArrowBack path=\"/artists\" />\n            </div>\n            <div className=\"body-artist-info\">\n              {responseMessage !== '' && (\n                <p>Playing track</p>\n              )}\n              <h3>Popular</h3>\n              <div className=\"popular-items\">\n                {tracks?.map(elem => {\n                  trackNumber += 1;\n                  return (\n                    <div\n                      key={elem.id}\n                      className=\"track-item\"\n                      onClick={playActivated(elem)}\n                      onKeyUp={() => { }}\n                      role=\"button\"\n                      tabIndex=\"0\"\n                    >\n                      <span>{trackNumber}</span>\n                      <img\n                        src={elem.album.images?.[elem.album.images.length - 1].url}\n                        alt={elem.trackName}\n                        width=\"45\"\n                      />\n                      <p>{elem.name}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </>\n        )}\n      {loading\n        && (\n          <TagMessage title=\"Loading...\" />\n        )}\n    </PhoneContainer>\n  );\n};\n\nexport default ArtistInfo;\n","const getFormatDate = dateString => {\n  const dateResponse = new Date(dateString);\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const currDate = dateResponse.getDate();\n  const currWeekDay = dateResponse.getDay();\n  return `${days[currWeekDay]} ${currDate}`;\n};\n\nconst getMonthString = dateIndex => {\n  const months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n  return months[dateIndex];\n};\n\nexport { getFormatDate, getMonthString };\n","export default duration => {\n  let seconds = Math.floor((duration / 1000) % 60);\n  let minutes = Math.floor((duration / (1000 * 60)) % 60);\n  let hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n  hours = (hours < 10) ? `0${hours}` : hours;\n  minutes = (minutes < 10) ? `0${minutes}` : minutes;\n  seconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n  return `${hours}:${minutes}:${seconds}`;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ArrowBack from '../components/arrow-back';\nimport IconsSvg from '../assets/icons/icons.svg';\nimport PhoneContainer from '../components/phone-container';\nimport { getFormatDate, getMonthString } from '../logic-operations/date-format';\nimport './result-tracks.scss';\nimport { getArtistStats } from '../logic-operations/Api';\nimport toMillisec from '../logic-operations/toMillisec';\nimport TagMessage from '../components/tag-message';\nimport groupBy from '../logic-operations/groupBy';\nimport makeArray from '../logic-operations/makeArray';\nimport sumTotal from '../logic-operations/sumTotal';\n\nconst checkArgMonth = (dateString, argMonth) => {\n  let response = false;\n  const date = new Date(dateString);\n  const month = date.getMonth();\n  if (month === argMonth) response = true;\n  return response;\n};\n\nconst getbyDate = (statsGroupedArray, checkDate) => statsGroupedArray.map(\n  elem => ({\n    track: elem.track.filter(elem => {\n      const { attributes: { created_at: createdAt } } = elem;\n      return checkArgMonth(createdAt, checkDate);\n    }),\n  }),\n);\n\nconst ResultTrack = () => {\n  const params = useParams();\n  const [date, setDate] = useState(new Date().getMonth());\n  const [stats, setStats] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [statsGroup, setStatsGroup] = useState([]);\n\n  const setDatesFunction = click => {\n    if (click === 1 && date !== 0) {\n      setDate(date - 1);\n    } else if (click === 2 && date !== 11) {\n      setDate(date + 1);\n    }\n  };\n\n  useEffect(() => {\n    const included = getbyDate(statsGroup, date);\n    setStats({ ...stats, included });\n  }, [date]);\n\n  useEffect(() => {\n    getArtistStats(params.id).then(response => {\n      if (response.status === 200) {\n        setLoading(false);\n        let statsGrouped = groupBy(response.data.included, 'spotify_track_id');\n        statsGrouped = makeArray(statsGrouped);\n        const { data: { data: { attributes: { name } } } } = response;\n        setStatsGroup(statsGrouped);\n        const included = getbyDate(statsGrouped, date);\n        setStats({ name, included });\n      }\n    });\n  }, []);\n\n  return (\n    <PhoneContainer tabActive=\"2\">\n      {stats.length !== 0 && !loading\n        ? (\n          <div className=\"result-track-container\">\n            <div className=\"result-track-content\">\n              <div className=\"header result-track-content-header\">\n                <ArrowBack path=\"/results\" />\n              </div>\n              <div className=\"result-track-content-body\">\n                <h2>{stats.name}</h2>\n                <div className=\"pick-date\">\n                  <div\n                    className=\"left-arrow\"\n                    onClick={() => setDatesFunction(1)}\n                    onKeyUp={() => { }}\n                    role=\"button\"\n                    tabIndex=\"0\"\n                  >\n                    <svg className=\"icon left-arrow-icon\">\n                      <use href={`${IconsSvg}#back-arrow`} />\n                    </svg>\n                  </div>\n                  <div className=\"text-date\">{getMonthString(date)?.toUpperCase()}</div>\n                  <div\n                    className=\"right-arrow\"\n                    onClick={() => setDatesFunction(2)}\n                    onKeyUp={() => { }}\n                    role=\"button\"\n                    tabIndex=\"0\"\n                  >\n                    <svg className=\"icon right-arrow-icon\">\n                      <use href={`${IconsSvg}#back-arrow`} />\n                    </svg>\n                  </div>\n                </div>\n                <div className=\"result-tracking-info\">\n                  {stats.included.filter(elem => elem.track.length !== 0).map(elem => {\n                    const { track } = elem;\n                    const { attributes } = track?.[0];\n                    return (\n                      <div key={track[0].id} className=\"result-tracking-item\">\n                        <div className=\"date\">\n                          <h4>{getFormatDate(attributes.created_at)}</h4>\n                          <p>{attributes.track_name}</p>\n                        </div>\n                        <div className=\"hours\">\n                          <p>{`${toMillisec(sumTotal(track))}`}</p>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n        : (\n          <TagMessage title=\"Loading...\" />\n        )}\n    </PhoneContainer>\n  );\n};\n\nexport default ResultTrack;\n","/* eslint-disable no-param-reassign */\nexport default (array, key) => array.reduce((result, currentValue) => {\n  (result[currentValue.attributes[key]] = result[currentValue.attributes[key]] || []).push(\n    currentValue,\n  );\n  return result;\n}, {});\n","export default statsGrouped => Object.entries(statsGrouped).map(e => ({ track: e[1] }));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport store from 'store';\nimport Artists from '../components/artists';\nimport HomeSearch from '../pages/home-search';\nimport Results from '../components/results';\nimport ArtistInfo from '../pages/artist-Info';\nimport ResultTrack from '../pages/result-tracks';\nimport storeKeys from '../assets/storeKeys';\n\nconst LoginRoutes = ({ login }) => {\n  if (!login) {\n    return <Redirect to=\"/splash\" />;\n  }\n  return (\n    <>\n      <Switch>\n        <Route path=\"/artists/search\" component={HomeSearch} />\n        <Route path=\"/artists/:id\" component={ArtistInfo} />\n        <Route path=\"/artists\" component={Artists} />\n        <Route path=\"/results/:id\" component={ResultTrack} />\n        <Route path=\"/results\" component={Results} />\n        <Route path=\"/\" component={Artists} />\n      </Switch>\n    </>\n  );\n};\n\nLoginRoutes.propTypes = {\n  login: PropTypes.bool,\n};\nconst tokenVar = !!store.get(storeKeys.TOKEN_VAR);\nLoginRoutes.defaultProps = {\n  login: tokenVar,\n};\n\nconst mapStateToProps = state => ({\n  login: state.login,\n});\n\nexport default connect(mapStateToProps)(LoginRoutes);\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport store from 'store';\nimport { setLogin, setUser } from '../redux/actions';\n\nimport Splash from '../pages/splash';\nimport SignUp from '../pages/signup';\nimport styles from './App.module.scss';\nimport LogIn from '../pages/login';\nimport LoginRoutes from './LoginRoutes';\nimport storeKeys from '../assets/storeKeys';\nimport { checkValidToken } from '../logic-operations/Api';\n\nconst App = ({\n  setLogin, setUser,\n}) => {\n  const { background } = styles;\n  useEffect(() => {\n    const token = store.get(storeKeys.TOKEN_VAR);\n    setLogin(!!token);\n    if (token) {\n      checkValidToken(token).then(response => {\n        if (response.status === 200) {\n          setLogin(true);\n          setUser(response.data.userId);\n        } else {\n          setLogin(false);\n          store.remove(storeKeys.TOKEN_VAR);\n        }\n      });\n    } else setLogin(false);\n  }, []);\n  return (\n    <div className={background}>\n      <Router>\n        <Switch>\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/login\" component={LogIn} />\n          <Route path=\"/splash\" component={Splash} />\n          <Route path=\"/\" component={LoginRoutes} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  setLogin: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  setLogin,\n  setUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './redux/reducers';\nimport App from './routes/App';\nimport './styles/index.scss';\n\nconst initialState = {};\nconst store = createStore(reducers, initialState);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","export default (state, { type, payload }) => {\n  switch (type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        user: payload,\n      };\n    case 'SET_LOGIN':\n      return {\n        ...state,\n        login: payload,\n      };\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}